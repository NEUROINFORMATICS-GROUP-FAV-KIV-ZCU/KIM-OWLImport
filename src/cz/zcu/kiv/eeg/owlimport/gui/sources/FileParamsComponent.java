package cz.zcu.kiv.eeg.owlimport.gui.sources;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import cz.zcu.kiv.eeg.owlimport.gui.ISourceParamsComponent;
import cz.zcu.kiv.eeg.owlimport.gui.ValidationException;
import cz.zcu.kiv.eeg.owlimport.model.sources.local.FileSourceParams;
import cz.zcu.kiv.eeg.owlimport.model.sources.ISourceParams;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

public class FileParamsComponent implements ISourceParamsComponent {
	private JPanel contentPane;
	private JTextField pathField;
	private JButton browseButton;

	public FileParamsComponent() {
		browseButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				JFileChooser chooser = new JFileChooser();
				chooser.setMultiSelectionEnabled(false);

				if (chooser.showOpenDialog(getPanel()) == JFileChooser.APPROVE_OPTION) {
					pathField.setText(chooser.getSelectedFile().getAbsolutePath());
				}
			}
		});
	}


	@Override
	public void validate() throws ValidationException {
		if (pathField.getText().length() == 0) {
			throw new ValidationException("You have to select a file you want to import.", pathField);
		}
		File file = new File(pathField.getText());
		if (!file.exists()) {
			throw new ValidationException("Selected file does not exist. Please select a valid file.", pathField);
		}
		if (!file.canRead()) {
			throw new ValidationException("Selected file is not readable. Please select a readable file.", pathField);
		}
	}

	@Override
	public JComponent getPanel() {
		return $$$getRootComponent$$$();
	}

	@Override
	public ISourceParams getParams() {
		FileSourceParams params = new FileSourceParams();
		params.setFile(new File(pathField.getText()));
		return params;
	}

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		contentPane = new JPanel();
		contentPane.setLayout(new GridLayoutManager(1, 3, new Insets(10, 10, 10, 10), -1, -1));
		final JLabel label1 = new JLabel();
		label1.setText("File:");
		contentPane.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		pathField = new JTextField();
		contentPane.add(pathField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
		browseButton = new JButton();
		browseButton.setText("Browse");
		contentPane.add(browseButton, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return contentPane;
	}
}
