package cz.zcu.kiv.eeg.owlimport.gui.rules;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import cz.zcu.kiv.eeg.owlimport.repository.RepositoryWrapper;
import cz.zcu.kiv.eeg.owlimport.gui.IRuleParamsComponent;
import cz.zcu.kiv.eeg.owlimport.gui.ValidationException;
import cz.zcu.kiv.eeg.owlimport.model.rules.export.ExportTitleParams;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * GUI component which allows user to specify property URI to be used as entity title..
 * @author Jan Smitka <jan@smitka.org>
 */
public class ExportTitleParamsComponent implements IRuleParamsComponent {
	private JComboBox titleUriBox;
	private JPanel rootPanel;

	private ExportTitleParams ruleParams;

	/**
	 * Initializes the component for editing specified rule parameters.
	 * @param params Rule parameters.
	 * @param repository Repository from which the property URIs will be selected.
	 */
	public ExportTitleParamsComponent(ExportTitleParams params, RepositoryWrapper repository) {
		$$$setupUI$$$();

		ruleParams = params;
		initTitleUriBox(repository);
	}

	/**
	 * Populates the title URI combobox with URIs from the repository.
	 * @param repository Repository.
	 */
	private void initTitleUriBox(RepositoryWrapper repository) {
		try {
			for (String property : repository.getAllProperties()) {
				titleUriBox.addItem(property);
			}
		} catch (Exception e) {
			// failed to retrieve params from repository - no big deal
		}

		titleUriBox.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				ruleParams.setLabelProp((String) titleUriBox.getSelectedItem());
			}
		});
	}


	/**
	 * Refreshes the combo box value.
	 */
	public void refresh() {
		if (ruleParams.getLabelProp() != null) {
			titleUriBox.setSelectedItem(ruleParams.getLabelProp());
		} else {
			ruleParams.setLabelProp((String) titleUriBox.getSelectedItem());
		}
	}

	/**
	 * Does not perform any validation.
	 * @throws ValidationException
	 */
	@Override
	public void validate() throws ValidationException {

	}

	/**
	 * Gets the component root panel.
	 * @return Panel.
	 */
	@Override
	public JComponent getPanel() {
		return $$$getRootComponent$$$();
	}


	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		rootPanel = new JPanel();
		rootPanel.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
		final JLabel label1 = new JLabel();
		label1.setText("Title Property URI:");
		rootPanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		final Spacer spacer1 = new Spacer();
		rootPanel.add(spacer1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
		titleUriBox = new JComboBox();
		titleUriBox.setEditable(true);
		rootPanel.add(titleUriBox, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return rootPanel;
	}
}
