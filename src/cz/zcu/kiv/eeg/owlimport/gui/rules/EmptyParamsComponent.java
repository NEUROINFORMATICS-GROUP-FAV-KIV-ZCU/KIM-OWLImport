package cz.zcu.kiv.eeg.owlimport.gui.rules;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import cz.zcu.kiv.eeg.owlimport.gui.IRuleParamsComponent;

import javax.swing.*;
import java.awt.*;

/**
 * GUI component informing user that the rule has no parameters.
 * @author Jan Smitka <jan@smitka.org>
 */
public class EmptyParamsComponent implements IRuleParamsComponent {
	private JPanel rootPanel;

	/**
	 * Gets the component panel.
	 * @return Panel.
	 */
	@Override
	public JComponent getPanel() {
		return $$$getRootComponent$$$();
	}

	/**
	 * Does not refresh values of any component.
	 */
	@Override
	public void refresh() {
		// nothing to refresh
	}

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		rootPanel = new JPanel();
		rootPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
		final JLabel label1 = new JLabel();
		label1.setText("Rule has no parameters.");
		rootPanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		final Spacer spacer1 = new Spacer();
		rootPanel.add(spacer1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return rootPanel;
	}
}
