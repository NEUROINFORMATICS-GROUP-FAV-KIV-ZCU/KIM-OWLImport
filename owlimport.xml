<?xml version="1.0" encoding="UTF-8"?>
<project name="owlimport" default="all">
  
  
  <property file="owlimport.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.apk"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  <!-- Modules -->
  
  
  <!-- Module OWLImport -->
  
  <dirname property="module.owlimport.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.owlimport" value="${compiler.args}"/>
  
  <property name="owlimport.output.dir" value="${module.owlimport.basedir}/out/production/OWLImport"/>
  <property name="owlimport.testoutput.dir" value="${module.owlimport.basedir}/out/test/OWLImport"/>
  
  <path id="owlimport.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="owlimport.module.production.classpath">
    <fileset dir="${basedir}/lib">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="owlimport.runtime.production.module.classpath">
    <pathelement location="${owlimport.output.dir}"/>
    <fileset dir="${basedir}/lib">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="owlimport.module.classpath">
    <pathelement location="${owlimport.output.dir}"/>
    <fileset dir="${basedir}/lib">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="owlimport.runtime.module.classpath">
    <pathelement location="${owlimport.testoutput.dir}"/>
    <pathelement location="${owlimport.output.dir}"/>
    <fileset dir="${basedir}/lib">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  
  <patternset id="excluded.from.module.owlimport">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.owlimport">
    <patternset refid="excluded.from.module.owlimport"/>
  </patternset>
  
  <path id="owlimport.module.sourcepath">
    <dirset dir="${module.owlimport.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.owlimport" depends="compile.module.owlimport.production,compile.module.owlimport.tests" description="Compile module OWLImport"/>
  
  <target name="compile.module.owlimport.production" description="Compile module OWLImport; production classes">
    <mkdir dir="${owlimport.output.dir}"/>
    <javac destdir="${owlimport.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.owlimport}"/>
      <bootclasspath refid="owlimport.module.bootclasspath"/>
      <classpath refid="owlimport.module.production.classpath"/>
      <src refid="owlimport.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.owlimport"/>
    </javac>
    
    <copy todir="${owlimport.output.dir}">
      <fileset dir="${module.owlimport.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.owlimport.tests" depends="compile.module.owlimport.production" description="compile module OWLImport; test classes" unless="skip.tests"/>
  
  <target name="clean.module.owlimport" description="cleanup module">
    <delete dir="${owlimport.output.dir}"/>
    <delete dir="${owlimport.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.owlimport, clean.artifact.owlimport:jar" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.owlimport" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.owlimport:jar" value="${basedir}/out/artifacts/OWLImport_jar"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.OWLImport.jar" value="${artifacts.temp.dir}/OWLImport.jar"/>
  </target>
  
  <target name="clean.artifact.owlimport:jar" description="clean OWLImport:jar artifact output">
    <delete dir="${artifact.output.owlimport:jar}"/>
  </target>
  
  <target name="artifact.owlimport:jar" depends="init.artifacts, compile.module.owlimport" description="Build &#39;OWLImport:jar&#39; artifact">
    <mkdir dir="${artifact.output.owlimport:jar}"/>
    <jar destfile="${temp.jar.path.OWLImport.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${owlimport.output.dir}"/>
    </jar>
    <copy file="${temp.jar.path.OWLImport.jar}" tofile="${artifact.output.owlimport:jar}/OWLImport.jar"/>
    <mkdir dir="${artifact.output.owlimport:jar}/libs"/>
    <copy file="${basedir}/lib/commons-codec-1.4.jar" tofile="${artifact.output.owlimport:jar}/libs/commons-codec-1.4.jar"/>
    <copy file="${basedir}/lib/commons-httpclient-3.1.jar" tofile="${artifact.output.owlimport:jar}/libs/commons-httpclient-3.1.jar"/>
    <copy file="${basedir}/lib/commons-logging-1.1.1.jar" tofile="${artifact.output.owlimport:jar}/libs/commons-logging-1.1.1.jar"/>
    <copy file="${basedir}/lib/forms_rt.jar" tofile="${artifact.output.owlimport:jar}/libs/forms_rt.jar"/>
    <copy file="${basedir}/lib/log4j-1.2.6.jar" tofile="${artifact.output.owlimport:jar}/libs/log4j-1.2.6.jar"/>
    <copy file="${basedir}/lib/lubm.jar" tofile="${artifact.output.owlimport:jar}/libs/lubm.jar"/>
    <copy file="${basedir}/lib/openrdf-sesame-2.6.10-onejar.jar" tofile="${artifact.output.owlimport:jar}/libs/openrdf-sesame-2.6.10-onejar.jar"/>
    <copy file="${basedir}/lib/owlim-lite-5.3.jar" tofile="${artifact.output.owlimport:jar}/libs/owlim-lite-5.3.jar"/>
    <copy file="${basedir}/lib/sesame-http-client-2.6.10.jar" tofile="${artifact.output.owlimport:jar}/libs/sesame-http-client-2.6.10.jar"/>
    <copy file="${basedir}/lib/slf4j-api-1.5.0.jar" tofile="${artifact.output.owlimport:jar}/libs/slf4j-api-1.5.0.jar"/>
    <copy file="${basedir}/lib/slf4j-jdk14-1.5.0.jar" tofile="${artifact.output.owlimport:jar}/libs/slf4j-jdk14-1.5.0.jar"/>
    <copy file="${basedir}/logback.xml" tofile="${artifact.output.owlimport:jar}/logback.xml"/>
    <copy file="${basedir}/README.md" tofile="${artifact.output.owlimport:jar}/README.md"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.owlimport:jar" description="Build all artifacts">
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>